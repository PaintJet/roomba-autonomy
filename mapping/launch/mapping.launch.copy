<!--
firing up the octomap server to generate 2D/3D occupancy maps
-->

<launch>
  <!-- ARGUMENTS  -->
  <!-- Pointcloud file path -->
  <arg name="pointcloud_path" default="$(find mapping)/config/pointcloud.ply" />

  <!-- resolution of the published map in meters per pixel -->
  <arg name="resolution" default="0.05"/>

  <!-- frame of map -->
  <arg name="frame_id" default="/map" />

  <!-- Max Height of pointcloud to read -->
  <arg name="pointcloud_max_height" default="1.0" />

  <!-- Topic to publish map -->
  <arg name="map_topic" default="/map" />

  <!-- Base frame of the robot -->
  <arg name="robot_base_frame" default="/base_link" />

  <!-- Launch node to publish point cloud generated from ARKit as a rostopic -->
  <node pkg="point_cloud_io" type="read" name="pointcloud_publisher">
    <param name="file_path" value="$(arg pointcloud_path)" />
    <param name="topic"     value="/cloud" />
    <param name="frame"     value="/cloud" />
    <param name="rate"      value="1.0" />
  </node>

  <!-- Generates an occupancy grid from pointcloud data -->
  <node pkg = "octomap_server" type = "octomap_server_node" name = "octomap_server">
    <!-- resolution in meters per pixel -->
    <param name = "resolution" value = "$(arg resolution)" />

    <!-- name of the fixed frame, needs to be "/map" for SLAM -->
    <param name = "frame_id" type = "string" value = "/map" />

    <!-- name of the base frame of the robot -->
    <param name = "base_frame_id" type = "string" value = "$(arg robot_base_frame)"/>

    <!-- max range of sensor - since we are using a pointcloud generated by ARKit - we don't want to limit this value -->
    <param name = "sensor_model/max_range" value = "10.0" />

    <!-- Ignore points in pointcloud higher than this value -->
    <param name = "pointcloud_max_z" value = "$(arg pointcloud_max_height)" />

    <param name="filter_speckles" value="true" />
    <param name="filter_ground" value="true" />

    <!-- Topic on which to publish 2d occupancy grid -->
    <remap from = "/projected_map" to = "$(arg map_topic)" />

    <!-- Topic on which to listen for pointcloud -->
    <remap from = "/cloud_in" to = "/cloud" />
  </node>

</launch>